[tool.poetry]
name = "aws-lambda-ec2-launch-checks"
version = "0.0.0"
description = "An AWS Lambda that will check Goss endpoint when triggered by ASG instance launch"
readme = "README.md"
authors = ["Team Telemetry <telemetry@digital.hmrc.gov.uk>"]
maintainers = ["Team Telemetry"]
license = "Apache 2.0"

[[tool.poetry.source]]
name = "artifactory"
url = "https://artefacts.tax.service.gov.uk/artifactory/api/pypi/pips/simple/"

[tool.poetry.dependencies]
aws-lambda-powertools = "^1.26.0"
boto3 = "^1.24.3"
python = "^3.8"
requests = "^2.25.1"

[tool.poetry.dev-dependencies]
aws-lambda-context = "^1.1.0"
aws-sam-cli = "^1.51.0"
bandit = "^1.7.4"
black = "^21.7b0"
colorama = "^0.4.4"
itsdangerous = "2.0.1"
Jinja2 = "3.0.3"
moto = "^3.1.12"
pre-commit = "^2.19.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
reorder-python-imports = "^3.1.0"
requests-mock = "^1.9.3"
safety = "^1.10.3"
taskipy = "^1.9.0"
version-incrementor = "^1.5.0"
werkzeug = "2.0.2"

[tool.taskipy.tasks]
assemble = "./bin/lambda-tools.sh assemble"
bandit = "bandit -r ./src"
black_check = "black --check --diff ./src ./tests"
black_reformat = "black ./src ./tests"
clean = "rm -fr ./build"
cut_release = "./bin/lambda-tools.sh cut_release"
post_functest = "task stop_lambda"
pre_functest = "task assemble && task start_lambda"
prepare_release = "./bin/lambda-tools.sh prepare_release"
publish = "./bin/lambda-tools.sh publish"
publish_checksum_file = "./bin/lambda-tools.sh publish_checksum_file"
publish_s3 = "./bin/lambda-tools.sh publish_artifacts_to_s3"
rename_s3_file = "./bin/lambda-tools.sh rename_artifacts_in_s3"
# Reason for safely skipping check: https://github.com/aws/aws-sam-cli/issues/3691#issuecomment-1099503361
safety = "safety check --ignore=47833"
start_lambda = "./bin/start-lambda.sh"
stop_lambda = "./bin/stop-lambda.sh"
test = "task unittest"
unittest = "PYTHONPATH='src' pytest tests/unit -vvvv --cov=src"
verify = "task test && task black_check && task safety && task bandit"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
